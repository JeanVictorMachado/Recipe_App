{"ast":null,"code":"var _jsxFileName = \"/home/jean/Trybe/projetos-Trybe/sd-06-project-recipes-app/src/components/FavoriteBtn/FavoriteFoodBtn.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport whiteHeartIcon from \"../../images/whiteHeartIcon.svg\";\nimport blackHeartIcon from \"../../images/blackHeartIcon.svg\";\nimport { detailsFoodById } from '../../services/aPI';\n\nconst FavoriteFoodButton = () => {\n  const [stateLocal, setStatelocal] = useState();\n  const [isFavorite, setIsFavorite] = useState(false);\n  const currentFoodID = useParams().id;\n\n  const handleIdDetails = async () => {\n    const food = await detailsFoodById(currentFoodID);\n    setStatelocal({ ...stateLocal,\n      food\n    });\n  };\n\n  const loadFavoriteRecipesFromLocalStorage = () => {\n    if (localStorage.getItem('favoriteRecipes') === null) {\n      const favoriteRecipes = [];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n    }\n\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const isRecipeFavorite = favoriteRecipes[0] ? favoriteRecipes.find(recipe => recipe.id === currentFoodID) : undefined;\n    if (isRecipeFavorite) setIsFavorite(true);else setIsFavorite(false);\n  };\n\n  useEffect(() => {\n    handleIdDetails();\n    loadFavoriteRecipesFromLocalStorage();\n  }, []);\n\n  const handleFavorite = () => {\n    const currentFood = stateLocal.food.meals[0];\n    const recipeData = {\n      id: currentFood.idMeal,\n      type: 'comida',\n      area: currentFood.strArea,\n      category: currentFood.strCategory,\n      alcoholicOrNot: '',\n      name: currentFood.strMeal,\n      image: currentFood.strMealThumb\n    };\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const zero = 0;\n    const isAlreadyAFavorite = favoriteRecipes.length > zero ? favoriteRecipes.find(recipe => recipe.id === currentFood.idMeal) : undefined;\n\n    if (isAlreadyAFavorite) {\n      setIsFavorite(false);\n      localStorage.setItem('favoriteRecipes', JSON.stringify([...favoriteRecipes.filter(recipe => recipe.id !== currentFood.idMeal)]));\n    } else {\n      setIsFavorite(true);\n      localStorage.setItem('favoriteRecipes', JSON.stringify([...favoriteRecipes, recipeData]));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleFavorite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: !isFavorite ? whiteHeartIcon : blackHeartIcon,\n    alt: !isFavorite ? 'whiteHeartIcon' : 'blackHeartIcon',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FavoriteFoodButton;","map":{"version":3,"sources":["/home/jean/Trybe/projetos-Trybe/sd-06-project-recipes-app/src/components/FavoriteBtn/FavoriteFoodBtn.js"],"names":["React","useEffect","useState","useParams","detailsFoodById","FavoriteFoodButton","stateLocal","setStatelocal","isFavorite","setIsFavorite","currentFoodID","id","handleIdDetails","food","loadFavoriteRecipesFromLocalStorage","localStorage","getItem","favoriteRecipes","setItem","JSON","stringify","parse","isRecipeFavorite","find","recipe","undefined","handleFavorite","currentFood","meals","recipeData","idMeal","type","area","strArea","category","strCategory","alcoholicOrNot","name","strMeal","image","strMealThumb","zero","isAlreadyAFavorite","length","filter","whiteHeartIcon","blackHeartIcon"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport { detailsFoodById } from '../../services/aPI';\n\nconst FavoriteFoodButton = () => {\n  const [stateLocal, setStatelocal] = useState();\n  const [isFavorite, setIsFavorite] = useState(false);\n  const currentFoodID = useParams().id;\n\n  const handleIdDetails = async () => {\n    const food = await detailsFoodById(currentFoodID);\n    setStatelocal({ ...stateLocal, food });\n  };\n\n  const loadFavoriteRecipesFromLocalStorage = () => {\n    if (localStorage.getItem('favoriteRecipes') === null) {\n      const favoriteRecipes = [];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n    }\n\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const isRecipeFavorite = favoriteRecipes[0] ? favoriteRecipes\n      .find((recipe) => recipe.id === currentFoodID) : undefined;\n\n    if (isRecipeFavorite) setIsFavorite(true);\n    else setIsFavorite(false);\n  };\n\n  useEffect(() => {\n    handleIdDetails();\n    loadFavoriteRecipesFromLocalStorage();\n  }, []);\n\n  const handleFavorite = () => {\n    const currentFood = stateLocal.food.meals[0];\n    const recipeData = {\n      id: currentFood.idMeal,\n      type: 'comida',\n      area: currentFood.strArea,\n      category: currentFood.strCategory,\n      alcoholicOrNot: '',\n      name: currentFood.strMeal,\n      image: currentFood.strMealThumb,\n    };\n\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const zero = 0;\n    const isAlreadyAFavorite = favoriteRecipes.length > zero\n      ? favoriteRecipes.find((recipe) => recipe.id === currentFood.idMeal) : undefined;\n\n    if (isAlreadyAFavorite) {\n      setIsFavorite(false);\n      localStorage.setItem('favoriteRecipes', JSON.stringify([...favoriteRecipes\n        .filter((recipe) => recipe.id !== currentFood.idMeal)]));\n    } else {\n      setIsFavorite(true);\n      localStorage.setItem('favoriteRecipes', JSON.stringify([\n        ...favoriteRecipes, recipeData]));\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onClick={ handleFavorite }\n    >\n      <img\n        data-testid=\"favorite-btn\"\n        src={ !isFavorite ? whiteHeartIcon : blackHeartIcon }\n        alt={ !isFavorite ? 'whiteHeartIcon' : 'blackHeartIcon' }\n      />\n    </button>);\n};\n\nexport default FavoriteFoodButton;\n"]},"metadata":{},"sourceType":"module"}