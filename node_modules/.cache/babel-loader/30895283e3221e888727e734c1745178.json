{"ast":null,"code":"var _jsxFileName = \"/home/jean/Trybe/projetos-Trybe/sd-06-project-recipes-app/src/Pages/ComidasPorIngrediente.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { exploreByIngredients, imageOfIngredients } from '../services/aPI';\nimport './ComidasPorIngrediente.css';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nconst ComidasPorIngrediente = () => {\n  const [stateIngredients, setStateIngredients] = useState();\n  const [stateUrlImage, setUrlImage] = useState({\n    url: []\n  });\n\n  const searchForIngredients = async () => {\n    const ingredients = await exploreByIngredients();\n    setStateIngredients(ingredients);\n  };\n\n  const images = [];\n\n  const searchImageOfIngredients = async nameIngredient => {\n    const urlImages = await imageOfIngredients(nameIngredient).then(res => res.url);\n    images.push(urlImages);\n  };\n\n  const numberOfIngredients = 11;\n\n  const searchImage = () => {\n    if (stateIngredients) {\n      stateIngredients.meals.filter((ingred, i) => i <= numberOfIngredients).map(res => res.strIngredient).map(cadaNome => searchImageOfIngredients(cadaNome));\n    }\n\n    return '';\n  };\n\n  useEffect(() => {\n    searchImage();\n  }, [stateIngredients]);\n  useEffect(() => {\n    searchForIngredients();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, !images.length ? console.log(images[1]) : console.log(images[2]), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-ingredients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, !stateIngredients ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 30\n    }\n  }, \"Loading...\") : stateIngredients.meals.map((ingred, i) => numberOfIngredients >= i && /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    className: \"container-ingredients\",\n    \"data-testid\": `${i}-ingredient-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": `${i}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, ingred.strIngredient), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"\",\n    alt: \"kkk\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ComidasPorIngrediente;","map":{"version":3,"sources":["/home/jean/Trybe/projetos-Trybe/sd-06-project-recipes-app/src/Pages/ComidasPorIngrediente.jsx"],"names":["React","useEffect","useState","exploreByIngredients","imageOfIngredients","Header","Footer","ComidasPorIngrediente","stateIngredients","setStateIngredients","stateUrlImage","setUrlImage","url","searchForIngredients","ingredients","images","searchImageOfIngredients","nameIngredient","urlImages","then","res","push","numberOfIngredients","searchImage","meals","filter","ingred","i","map","strIngredient","cadaNome","length","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { exploreByIngredients, imageOfIngredients } from '../services/aPI';\nimport './ComidasPorIngrediente.css';\n\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nconst ComidasPorIngrediente = () => {\n  const [stateIngredients, setStateIngredients] = useState();\n  const [stateUrlImage, setUrlImage] = useState({ url: [] });\n\n  const searchForIngredients = async () => {\n    const ingredients = await exploreByIngredients();\n\n    setStateIngredients(ingredients);\n  };\n\n  const images = [];\n\n  const searchImageOfIngredients = async (nameIngredient) => {\n    const urlImages = await imageOfIngredients(nameIngredient)\n      .then((res) => res.url);\n\n    images.push(urlImages);\n  };\n\n  const numberOfIngredients = 11;\n\n  const searchImage = () => {\n    if (stateIngredients) {\n      stateIngredients.meals\n        .filter(((ingred, i) => i <= numberOfIngredients))\n        .map((res) => res.strIngredient)\n        .map((cadaNome) => searchImageOfIngredients(cadaNome));\n    }\n    return '';\n  };\n\n  useEffect(() => {\n    searchImage();\n  }, [stateIngredients]);\n\n  useEffect(() => {\n    searchForIngredients();\n  }, []);\n\n  return (\n    <div>\n      {/* {stateIngredients && console.log(stateIngredients)} */}\n      { !images.length ? console.log(images[1]) : console.log(images[2])}\n      <Header />\n      <div className=\"main-ingredients\">\n        {!stateIngredients ? <div>Loading...</div>\n          : stateIngredients.meals.map((ingred, i) => (\n            numberOfIngredients >= i\n            && (\n              <div\n                key={ i }\n                className=\"container-ingredients\"\n                data-testid={ `${i}-ingredient-card` }\n              >\n                <span\n                  data-testid={ `${i}-card-name` }\n                >\n                  {ingred.strIngredient}\n                </span>\n                <img\n                  src=\"\"\n                  alt=\"kkk\"\n                />\n              </div>\n            )\n          ))}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default ComidasPorIngrediente;\n"]},"metadata":{},"sourceType":"module"}