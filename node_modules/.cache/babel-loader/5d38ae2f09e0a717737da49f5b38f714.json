{"ast":null,"code":"var _jsxFileName = \"/home/jean/Trybe/projetos-Trybe/sd-06-project-recipes-app/src/Pages/ProcessoBebida.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { detailsDrinkById } from '../services/aPI';\nimport './ProcessoComida.css';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\n\nconst ProcessoBebidas = () => {\n  const [recipeProgress, setRecipeProgress] = useState();\n  const [attributesNames, setAttributesNames] = useState();\n  const [checkedId, setCheckedId] = useState([]);\n  const idDrink = useParams().id;\n\n  const handleIdInProgress = async () => {\n    const recipeById = await detailsDrinkById(idDrink);\n    setRecipeProgress({ ...recipeProgress,\n      drink: recipeById\n    });\n  };\n\n  const loadCheckedIngredientsLocalStorage = () => {\n    if (localStorage.getItem('checkedIngredients') === null) {\n      const checkedIngredients = {\n        cocktails: {},\n        meals: {}\n      };\n      localStorage.setItem('checkedIngredients', JSON.stringify(checkedIngredients));\n    }\n\n    const checkedIngredients = JSON.parse(localStorage.getItem('checkedIngredients'));\n    setCheckedId(checkedIngredients.cocktails[idDrink] || []);\n  };\n\n  const loadDoneRecipesFromStorage = () => {\n    if (localStorage.getItem('doneRecipes') === null) {\n      const doneRecipes = [];\n      localStorage.setItem('doneRecipes', JSON.stringify(doneRecipes));\n    }\n  };\n\n  useEffect(() => {\n    handleIdInProgress();\n    loadCheckedIngredientsLocalStorage();\n    loadDoneRecipesFromStorage();\n  }, []);\n\n  const handleAttributesNames = () => {\n    if (recipeProgress) {\n      setAttributesNames({\n        idDrink: recipeProgress.drink.drinks[0].idDrink,\n        photoDrink: recipeProgress.drink.drinks[0].strDrinkThumb,\n        area: recipeProgress.drink.drinks[0].strArea,\n        nameDrink: recipeProgress.drink.drinks[0].strDrink,\n        categoryDrink: recipeProgress.drink.drinks[0].strCategory,\n        instructionsDrink: recipeProgress.drink.drinks[0].strInstructions,\n        doneDate: '',\n        tags: recipeProgress.drink.drinks[0].strTags ? recipeProgress.drink.drinks.strTags : []\n      });\n    } else {\n      return '';\n    }\n  };\n\n  useEffect(() => {\n    handleAttributesNames();\n  }, [recipeProgress]);\n\n  const getIngredientsOrMeasure = param => {\n    const dataObject = recipeProgress.drink.drinks[0];\n    const dataKeys = Object.keys(dataObject).filter(key => key.includes(param) && dataObject[key] !== '' && dataObject[key] !== ' ' && dataObject[key] !== null);\n    const ingredients = dataKeys.map(key => dataObject[key]);\n    return ingredients;\n  };\n\n  const setDoneRecipes = () => {\n    if (recipeProgress) {\n      const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n      localStorage.setItem('doneRecipes', JSON.stringify([...doneRecipes, {\n        id: recipeProgress.drink.drinks[0].idDrink,\n        type: 'bebida',\n        area: recipeProgress.drink.drinks[0].strArea,\n        category: recipeProgress.drink.drinks[0].strCategory,\n        alcoholicOrNot: '',\n        name: recipeProgress.drink.drinks[0].strDrink,\n        photoFood: recipeProgress.drink.drinks[0].strDrinkThumb,\n        doneDate: '',\n        tags: recipeProgress.drink.drinks[0].strTags ? recipeProgress.drink.drinks[0].strTags : []\n      }]));\n    } else {\n      return '';\n    }\n  };\n\n  const scratCheckbox = target => {\n    const checkedIngredients = JSON.parse(localStorage.getItem('checkedIngredients'));\n\n    if (target.checked === true) {\n      const ingredientsToSave = { ...checkedIngredients,\n        cocktails: { ...checkedIngredients.cocktails,\n          [idDrink]: checkedIngredients.cocktails[idDrink] ? [...checkedIngredients.cocktails[idDrink], target.id] : [target.id]\n        }\n      };\n      localStorage.setItem('checkedIngredients', JSON.stringify(ingredientsToSave));\n      setCheckedId(ingredientsToSave.cocktails[idDrink]);\n    } else {\n      const ingredientsToSave = { ...checkedIngredients,\n        cocktails: { ...checkedIngredients.cocktails,\n          [idDrink]: [...checkedIngredients.cocktails[idDrink].filter(id => id !== target.id)]\n        }\n      };\n      localStorage.setItem('checkedIngredients', JSON.stringify(ingredientsToSave));\n      setCheckedId(ingredientsToSave.cocktails[idDrink]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, !attributesNames ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body-progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    src: attributesNames.photoDrink,\n    alt: attributesNames.nameDrink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, attributesNames.nameDrink), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"button-share\",\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: \"shareIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: whiteHeartIcon,\n    alt: \"whiteHeartIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-cotegory\",\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, attributesNames.categoryDrink), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"span-ingredients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, \"Ingredients\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, getIngredientsOrMeasure('strIngredient').map((ingred, i) => /*#__PURE__*/React.createElement(\"label\", {\n    key: i,\n    htmlFor: i,\n    className: \"input-checkbox\",\n    \"data-testid\": `${i}-ingredient-step`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: checkedId.includes(i.toString()),\n    id: i,\n    onChange: ({\n      target\n    }) => scratCheckbox(target),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  }), `${ingred} - ${getIngredientsOrMeasure('strMeasure')[i]}`))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-instructions\",\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }, \"Instructions\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, attributesNames.instructionsDrink)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    onClick: setDoneRecipes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"link-button\",\n    to: \"/receitas-feitas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }, \"Finalizar Receita\")))));\n};\n\nexport default ProcessoBebidas;","map":{"version":3,"sources":["/home/jean/Trybe/projetos-Trybe/sd-06-project-recipes-app/src/Pages/ProcessoBebida.jsx"],"names":["React","useState","useEffect","useParams","Link","detailsDrinkById","ProcessoBebidas","recipeProgress","setRecipeProgress","attributesNames","setAttributesNames","checkedId","setCheckedId","idDrink","id","handleIdInProgress","recipeById","drink","loadCheckedIngredientsLocalStorage","localStorage","getItem","checkedIngredients","cocktails","meals","setItem","JSON","stringify","parse","loadDoneRecipesFromStorage","doneRecipes","handleAttributesNames","drinks","photoDrink","strDrinkThumb","area","strArea","nameDrink","strDrink","categoryDrink","strCategory","instructionsDrink","strInstructions","doneDate","tags","strTags","getIngredientsOrMeasure","param","dataObject","dataKeys","Object","keys","filter","key","includes","ingredients","map","setDoneRecipes","type","category","alcoholicOrNot","name","photoFood","scratCheckbox","target","checked","ingredientsToSave","shareIcon","whiteHeartIcon","ingred","i","toString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { detailsDrinkById } from '../services/aPI';\n\nimport './ProcessoComida.css';\n\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\n\nconst ProcessoBebidas = () => {\n  const [recipeProgress, setRecipeProgress] = useState();\n  const [attributesNames, setAttributesNames] = useState();\n  const [checkedId, setCheckedId] = useState([]);\n\n  const idDrink = useParams().id;\n\n  const handleIdInProgress = async () => {\n    const recipeById = await detailsDrinkById(idDrink);\n\n    setRecipeProgress({\n      ...recipeProgress,\n      drink: recipeById,\n    });\n  };\n\n  const loadCheckedIngredientsLocalStorage = () => {\n    if (localStorage.getItem('checkedIngredients') === null) {\n      const checkedIngredients = {\n        cocktails: {},\n        meals: {},\n      };\n      localStorage.setItem('checkedIngredients', JSON.stringify(checkedIngredients));\n    }\n\n    const checkedIngredients = JSON.parse(localStorage.getItem('checkedIngredients'));\n    setCheckedId(checkedIngredients.cocktails[idDrink] || []);\n  };\n\n  const loadDoneRecipesFromStorage = () => {\n    if (localStorage.getItem('doneRecipes') === null) {\n      const doneRecipes = [];\n      localStorage.setItem('doneRecipes', JSON.stringify(doneRecipes));\n    }\n  };\n\n  useEffect(() => {\n    handleIdInProgress();\n    loadCheckedIngredientsLocalStorage();\n    loadDoneRecipesFromStorage();\n  }, []);\n\n  const handleAttributesNames = () => {\n    if (recipeProgress) {\n      setAttributesNames({\n        idDrink: recipeProgress.drink.drinks[0].idDrink,\n        photoDrink: recipeProgress.drink.drinks[0].strDrinkThumb,\n        area: recipeProgress.drink.drinks[0].strArea,\n        nameDrink: recipeProgress.drink.drinks[0].strDrink,\n        categoryDrink: recipeProgress.drink.drinks[0].strCategory,\n        instructionsDrink: recipeProgress.drink.drinks[0].strInstructions,\n        doneDate: '',\n        tags: recipeProgress.drink.drinks[0].strTags\n          ? recipeProgress.drink.drinks.strTags\n          : [],\n      });\n    } else {\n      return '';\n    }\n  };\n\n  useEffect(() => {\n    handleAttributesNames();\n  }, [recipeProgress]);\n\n  const getIngredientsOrMeasure = (param) => {\n    const dataObject = recipeProgress.drink.drinks[0];\n\n    const dataKeys = Object.keys(dataObject)\n      .filter((key) => key.includes(param)\n        && dataObject[key] !== '' && dataObject[key] !== ' ' && dataObject[key] !== null);\n\n    const ingredients = dataKeys\n      .map((key) => dataObject[key]);\n\n    return ingredients;\n  };\n\n  const setDoneRecipes = () => {\n    if (recipeProgress) {\n      const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n      localStorage.setItem('doneRecipes', JSON.stringify([...doneRecipes, {\n        id: recipeProgress.drink.drinks[0].idDrink,\n        type: 'bebida',\n        area: recipeProgress.drink.drinks[0].strArea,\n        category: recipeProgress.drink.drinks[0].strCategory,\n        alcoholicOrNot: '',\n        name: recipeProgress.drink.drinks[0].strDrink,\n        photoFood: recipeProgress.drink.drinks[0].strDrinkThumb,\n        doneDate: '',\n        tags: recipeProgress.drink.drinks[0].strTags\n          ? recipeProgress.drink.drinks[0].strTags\n          : [],\n      }]));\n    } else {\n      return '';\n    }\n  };\n\n  const scratCheckbox = (target) => {\n    const checkedIngredients = JSON.parse(localStorage.getItem('checkedIngredients'));\n\n    if (target.checked === true) {\n      const ingredientsToSave = {\n        ...checkedIngredients,\n        cocktails: {\n          ...checkedIngredients.cocktails,\n          [idDrink]: checkedIngredients.cocktails[idDrink] ? [\n            ...checkedIngredients.cocktails[idDrink],\n            target.id,\n          ] : [target.id],\n        },\n      };\n      localStorage.setItem('checkedIngredients', JSON.stringify(ingredientsToSave));\n      setCheckedId(ingredientsToSave.cocktails[idDrink]);\n    } else {\n      const ingredientsToSave = {\n        ...checkedIngredients,\n        cocktails: {\n          ...checkedIngredients.cocktails,\n          [idDrink]: [\n            ...checkedIngredients.cocktails[idDrink].filter((id) => id !== target.id),\n          ],\n        },\n      };\n      localStorage.setItem('checkedIngredients', JSON.stringify(ingredientsToSave));\n      setCheckedId(ingredientsToSave.cocktails[idDrink]);\n    }\n  };\n\n  return (\n    <div>\n      {!attributesNames\n        ? <div className=\"loading\">Loading...</div>\n        : (\n          <div className=\"body-progress\">\n            <div className=\"container-photo\">\n              <img\n                data-testid=\"recipe-photo\"\n                src={ attributesNames.photoDrink }\n                alt={ attributesNames.nameDrink }\n              />\n            </div>\n            <div className=\"container-title\">\n              <div\n                className=\"title\"\n                data-testid=\"recipe-title\"\n              >\n                {attributesNames.nameDrink}\n              </div>\n              <div className=\"container-icons\">\n                <button\n                  type=\"button\"\n                >\n                  <img\n                    className=\"button-share\"\n                    data-testid=\"share-btn\"\n                    src={ shareIcon }\n                    alt=\"shareIcon\"\n                  />\n                </button>\n                <button\n                  type=\"button\"\n                >\n                  <img\n                    data-testid=\"favorite-btn\"\n                    src={ whiteHeartIcon }\n                    alt=\"whiteHeartIcon\"\n                  />\n                </button>\n              </div>\n            </div>\n            <div\n              className=\"container-cotegory\"\n              data-testid=\"recipe-category\"\n            >\n              {attributesNames.categoryDrink}\n            </div>\n            <div className=\"span-ingredients\">\n              <span>Ingredients</span>\n            </div>\n            <div className=\"container-checkbox\">\n              {getIngredientsOrMeasure('strIngredient').map((ingred, i) => (\n                <label\n                  key={ i }\n                  htmlFor={ i }\n                  className=\"input-checkbox\"\n                  data-testid={ `${i}-ingredient-step` }\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={ checkedId.includes(i.toString()) }\n                    id={ i }\n                    onChange={ (({ target }) => scratCheckbox(target)) }\n                  />\n                  {`${ingred} - ${getIngredientsOrMeasure('strMeasure')[i]}`}\n                </label>\n              ))}\n            </div>\n            <div\n              className=\"container-instructions\"\n              data-testid=\"instructions\"\n            >\n              <span>Instructions</span>\n              <div className=\"text-instructions\">\n                {attributesNames.instructionsDrink}\n              </div>\n            </div>\n            <div className=\"container-button\">\n              <button\n                type=\"button\"\n                data-testid=\"finish-recipe-btn\"\n                onClick={ setDoneRecipes }\n              >\n                <Link\n                  className=\"link-button\"\n                  to=\"/receitas-feitas\"\n                >\n                  Finalizar Receita\n                </Link>\n              </button>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default ProcessoBebidas;\n"]},"metadata":{},"sourceType":"module"}