{"ast":null,"code":"var _jsxFileName = \"/home/jean/Trybe/projetos-Trybe/sd-06-project-recipes-app/src/components/Recomendations/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { showSugestedDrinks, showSugestedFoods } from '../../services/aPI';\n\nconst Recomendations = () => {\n  const [recomendedRecipes, setRecomendedRecipes] = useState();\n  const path = window.location.href;\n  const isFoodPage = path.includes('comidas');\n  const numberOfRecomendationsShown = 6;\n\n  const getRecomendedRecipes = async () => {\n    const sugestions = isFoodPage ? await showSugestedDrinks() : await showSugestedFoods();\n    setRecomendedRecipes(sugestions);\n  };\n\n  useEffect(() => {\n    getRecomendedRecipes();\n  }, []);\n\n  const getDrinkRecomendations = () => recomendedRecipes.drinks.map((drink, index) => {\n    if (index < numberOfRecomendationsShown) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"main-scroll\",\n        key: drink.strDrink,\n        \"data-testid\": `${index}-recomendation-card`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        \"data-testid\": `${index}-recomendation-title`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, drink.strDrink), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/bebidas/${drink.idDrink}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"img-recomendations\",\n        width: \"200\",\n        src: drink.strDrinkThumb,\n        alt: drink.strDrink,\n        \"data-testid\": `${index}-card-img`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }))));\n    }\n\n    return '';\n  });\n\n  const getFoodRecomendations = () => recomendedRecipes.meals.map((meal, index) => {\n    if (index < numberOfRecomendationsShown) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"main-scroll\",\n        key: meal.strMeal,\n        \"data-testid\": `${index}-recomendation-card`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        \"data-testid\": `${index}-recomendation-title`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, meal.strMeal), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/comidas/${meal.idMeal}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"img-recomendations\",\n        src: meal.strMealThumb,\n        alt: meal.strMeal,\n        \"data-testid\": `${index}-card-img`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }))));\n    }\n\n    return '';\n  });\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recomendation-span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Recomendadas\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-recomendations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, recomendedRecipes && (isFoodPage ? getDrinkRecomendations() : getFoodRecomendations())));\n};\n\nexport default Recomendations;","map":{"version":3,"sources":["/home/jean/Trybe/projetos-Trybe/sd-06-project-recipes-app/src/components/Recomendations/index.js"],"names":["React","useEffect","useState","Link","showSugestedDrinks","showSugestedFoods","Recomendations","recomendedRecipes","setRecomendedRecipes","path","window","location","href","isFoodPage","includes","numberOfRecomendationsShown","getRecomendedRecipes","sugestions","getDrinkRecomendations","drinks","map","drink","index","strDrink","idDrink","strDrinkThumb","getFoodRecomendations","meals","meal","strMeal","idMeal","strMealThumb"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { showSugestedDrinks, showSugestedFoods } from '../../services/aPI';\n\nconst Recomendations = () => {\n  const [recomendedRecipes, setRecomendedRecipes] = useState();\n  const path = window.location.href;\n  const isFoodPage = path.includes('comidas');\n  const numberOfRecomendationsShown = 6;\n\n  const getRecomendedRecipes = async () => {\n    const sugestions = isFoodPage\n      ? await showSugestedDrinks() : await showSugestedFoods();\n\n    setRecomendedRecipes(sugestions);\n  };\n\n  useEffect(() => {\n    getRecomendedRecipes();\n  }, []);\n\n  const getDrinkRecomendations = () => (\n    recomendedRecipes.drinks.map((drink, index) => {\n      if (index < numberOfRecomendationsShown) {\n        return (\n          <div\n            className=\"main-scroll\"\n            key={ drink.strDrink }\n            data-testid={ `${index}-recomendation-card` }\n          >\n            <p data-testid={ `${index}-recomendation-title` }>\n              {drink.strDrink}\n            </p>\n            <button type=\"button\" className=\"button\">\n              <Link to={ `/bebidas/${drink.idDrink}` }>\n                <img\n                  className=\"img-recomendations\"\n                  width=\"200\"\n                  src={ drink.strDrinkThumb }\n                  alt={ drink.strDrink }\n                  data-testid={ `${index}-card-img` }\n                />\n              </Link>\n            </button>\n          </div>\n        );\n      }\n      return '';\n    })\n  );\n\n  const getFoodRecomendations = () => (\n    recomendedRecipes.meals.map((meal, index) => {\n      if (index < numberOfRecomendationsShown) {\n        return (\n          <div\n            className=\"main-scroll\"\n            key={ meal.strMeal }\n            data-testid={ `${index}-recomendation-card` }\n          >\n            <p data-testid={ `${index}-recomendation-title` }>\n              {meal.strMeal}\n            </p>\n            <button type=\"button\" className=\"button\">\n              <Link to={ `/comidas/${meal.idMeal}` }>\n                <img\n                  className=\"img-recomendations\"\n                  src={ meal.strMealThumb }\n                  alt={ meal.strMeal }\n                  data-testid={ `${index}-card-img` }\n                />\n              </Link>\n            </button>\n          </div>\n        );\n      }\n      return '';\n    })\n  );\n\n  return (\n    <div>\n      <div className=\"recomendation-span\">\n        <span>\n          Recomendadas\n        </span>\n      </div>\n      <div className=\"container-recomendations\">\n        { recomendedRecipes && (isFoodPage ? (getDrinkRecomendations())\n          : (getFoodRecomendations()))}\n      </div>\n    </div>\n  );\n};\n\nexport default Recomendations;\n"]},"metadata":{},"sourceType":"module"}