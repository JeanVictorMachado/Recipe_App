{"ast":null,"code":"var _jsxFileName = \"/home/jean/Trybe/projetos-Trybe/sd-06-project-recipes-app/src/Pages/ComidasPorIngrediente.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { exploreByIngredients, imageOfIngredients } from '../services/aPI';\nimport './ComidasPorIngrediente.css';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nconst ComidasPorIngrediente = () => {\n  const [stateIngredients, setStateIngredients] = useState();\n  const [stateUrlImage, setUrlImage] = useState({\n    url: []\n  });\n\n  const searchForIngredients = async () => {\n    const ingredients = await exploreByIngredients();\n    setStateIngredients(ingredients);\n  }; // const searchImageOfIngredients = async (nameIngredient) => {\n  //   const images = [];\n  //   const urlImages = await imageOfIngredients(nameIngredient)\n  //     .then((res) => res.url);\n  //   images.push(urlImages);\n  //   console.log(images);\n  //   setUrlImage({\n  //     url: [\n  //       ...stateUrlImage.url,\n  //       urlImages,\n  //     ],\n  //   });\n  //   return urlImages;\n  // };\n\n\n  const numberOfIngredients = 11;\n\n  const searchImage = () => {\n    const array = [];\n\n    if (stateIngredients) {\n      stateIngredients.meals.map((ingred, i) => {\n        for (let index = 0; index < numberOfIngredients; index++) {\n          const urlSearch = async () => {\n            const urlImages = await imageOfIngredients('beef').then(res => res.url);\n            array.push(urlImages);\n          };\n        }\n      });\n    } else {\n      return '';\n    }\n  }; // const searchImage = () => {\n  //   if (stateIngredients) {\n  //     const namesUrl = stateIngredients.meals\n  //       .filter(((ingred, i) => i <= numberOfIngredients))\n  //       .map((res) => res.strIngredient);\n  //     searchImageOfIngredients(namesUrl);\n  //   }\n  //   return '';\n  // };\n  // useEffect(() => {\n  //   searchImage();\n  // }, []);\n\n\n  useEffect(() => {\n    searchForIngredients();\n    searchImage();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, stateIngredients && console.log(stateIngredients), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-ingredients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, !stateIngredients ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 30\n    }\n  }, \"Loading...\") : stateIngredients.meals.map((ingred, i) => numberOfIngredients >= i && /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    className: \"container-ingredients\",\n    \"data-testid\": `${i}-ingredient-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": `${i}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, ingred.strIngredient), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"\",\n    alt: \"kkk\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ComidasPorIngrediente;","map":{"version":3,"sources":["/home/jean/Trybe/projetos-Trybe/sd-06-project-recipes-app/src/Pages/ComidasPorIngrediente.jsx"],"names":["React","useEffect","useState","exploreByIngredients","imageOfIngredients","Header","Footer","ComidasPorIngrediente","stateIngredients","setStateIngredients","stateUrlImage","setUrlImage","url","searchForIngredients","ingredients","numberOfIngredients","searchImage","array","meals","map","ingred","i","index","urlSearch","urlImages","then","res","push","console","log","strIngredient"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { exploreByIngredients, imageOfIngredients } from '../services/aPI';\nimport './ComidasPorIngrediente.css';\n\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nconst ComidasPorIngrediente = () => {\n  const [stateIngredients, setStateIngredients] = useState();\n  const [stateUrlImage, setUrlImage] = useState({ url: [] });\n\n  const searchForIngredients = async () => {\n    const ingredients = await exploreByIngredients();\n\n    setStateIngredients(ingredients);\n  };\n\n  // const searchImageOfIngredients = async (nameIngredient) => {\n  //   const images = [];\n\n  //   const urlImages = await imageOfIngredients(nameIngredient)\n  //     .then((res) => res.url);\n\n  //   images.push(urlImages);\n\n  //   console.log(images);\n\n  //   setUrlImage({\n  //     url: [\n  //       ...stateUrlImage.url,\n  //       urlImages,\n  //     ],\n  //   });\n\n  //   return urlImages;\n  // };\n\n  const numberOfIngredients = 11;\n\n  const searchImage = () => {\n    const array = [];\n\n    if (stateIngredients) {\n      stateIngredients.meals.map((ingred, i) => {\n        for (let index = 0; index < numberOfIngredients; index++) {\n          const urlSearch = async () => {\n            const urlImages = await imageOfIngredients('beef')\n              .then((res) => res.url);\n\n            array.push(urlImages);\n          };\n        }\n      });\n    } else {\n      return '';\n    }\n  };\n\n  // const searchImage = () => {\n  //   if (stateIngredients) {\n  //     const namesUrl = stateIngredients.meals\n  //       .filter(((ingred, i) => i <= numberOfIngredients))\n  //       .map((res) => res.strIngredient);\n\n  //     searchImageOfIngredients(namesUrl);\n  //   }\n  //   return '';\n  // };\n\n  // useEffect(() => {\n  //   searchImage();\n  // }, []);\n\n  useEffect(() => {\n    searchForIngredients();\n    searchImage();\n  }, []);\n\n  return (\n    <div>\n      {stateIngredients && console.log(stateIngredients)}\n      <Header />\n      <div className=\"main-ingredients\">\n        {!stateIngredients ? <div>Loading...</div>\n          : stateIngredients.meals.map((ingred, i) => (\n            numberOfIngredients >= i\n            && (\n              <div\n                key={ i }\n                className=\"container-ingredients\"\n                data-testid={ `${i}-ingredient-card` }\n              >\n                <span\n                  data-testid={ `${i}-card-name` }\n                >\n                  {ingred.strIngredient}\n                </span>\n                <img\n                  src=\"\"\n                  alt=\"kkk\"\n                />\n              </div>\n            )\n          ))}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default ComidasPorIngrediente;\n"]},"metadata":{},"sourceType":"module"}