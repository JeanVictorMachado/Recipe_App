{"ast":null,"code":"var _jsxFileName = \"/home/jean/Trybe/projetos-Trybe/sd-06-project-recipes-app/src/Pages/DetalhesComidas.jsx\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ContextAPI from '../Context/ContextAPI';\nimport { detailsFoodById, showSugestedFoods } from '../services/aPI';\nimport './DetalhesComida.css';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\n\nconst DetalhesComida = () => {\n  const {\n    stateIdDetails\n  } = useContext(ContextAPI);\n  const [stateLocal, setStatelocal] = useState();\n  const [stateSugestions, setSugestions] = useState();\n\n  const handleIdDetails = async () => {\n    const recipeById = await detailsFoodById(stateIdDetails.id);\n    setStatelocal({ ...stateLocal,\n      food: recipeById,\n      id: stateIdDetails.id\n    }); // console.log(recipeById);\n  };\n\n  const getSugestedFoods = async () => {\n    const foods = await showSugestedFoods();\n    console.log(foods);\n    setSugestions(foods);\n  };\n\n  useEffect(() => {\n    handleIdDetails();\n    getSugestedFoods();\n  }, []);\n\n  const getIngredients = () => {\n    const objectIngredients = stateLocal.food.meals[0];\n    const keysIngredients = Object.keys(objectIngredients).filter(key => key.includes('strIngredient') && objectIngredients[key] !== '');\n    const ingredients = keysIngredients.map(key => objectIngredients[key]);\n    return ingredients;\n  };\n\n  const number = 5;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, stateLocal ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, console.log(stateLocal.food.meals), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    className: \"img-details\",\n    src: stateLocal.food.meals[0].strMealThumb,\n    alt: stateLocal.food.meals[0].strMeal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, stateLocal.food.meals[0].strMeal), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: \"shareIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: whiteHeartIcon,\n    alt: \"whiteHeartIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, stateLocal.food.meals[0].strCategory), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ingredients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, getIngredients().map((ingred, i) => /*#__PURE__*/React.createElement(\"li\", {\n    \"data-testid\": `${i}-ingredient-name-and-measure`,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, ingred)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, \"Instructions\"), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, stateLocal.food.meals[0].strInstructions)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Video\"), /*#__PURE__*/React.createElement(\"a\", {\n    \"data-testid\": \"video\",\n    href: stateLocal.food.meals[0].strYoutube,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: stateLocal.food.meals[0].strMealThumb,\n    alt: stateLocal.food.meals[0].strMeal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, stateSugestions && stateSugestions.map((meal, index) => {\n    if (index <= number) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        key: meal.strMeal,\n        \"data-testid\": `${index}-recipe-card`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        \"data-testid\": `${index}-card-name`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 23\n        }\n      }, meal.strMeal), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"button\",\n        onClick: () => handleIdDetails(meal.idMeal),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/comidas/${meal.idMeal}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        width: \"200\",\n        src: meal.strMealThumb,\n        alt: meal.strMeal,\n        \"data-testid\": `${index}-card-img`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 27\n        }\n      }))));\n    }\n\n    return '';\n  })))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, \"Loading...\"));\n};\n\nexport default DetalhesComida;","map":{"version":3,"sources":["/home/jean/Trybe/projetos-Trybe/sd-06-project-recipes-app/src/Pages/DetalhesComidas.jsx"],"names":["React","useContext","useEffect","useState","Link","ContextAPI","detailsFoodById","showSugestedFoods","DetalhesComida","stateIdDetails","stateLocal","setStatelocal","stateSugestions","setSugestions","handleIdDetails","recipeById","id","food","getSugestedFoods","foods","console","log","getIngredients","objectIngredients","meals","keysIngredients","Object","keys","filter","key","includes","ingredients","map","number","strMealThumb","strMeal","shareIcon","whiteHeartIcon","strCategory","ingred","i","strInstructions","strYoutube","meal","index","idMeal"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ContextAPI from '../Context/ContextAPI';\nimport { detailsFoodById, showSugestedFoods } from '../services/aPI';\nimport './DetalhesComida.css';\n\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\n\nconst DetalhesComida = () => {\n  const { stateIdDetails } = useContext(ContextAPI);\n\n  const [stateLocal, setStatelocal] = useState();\n  const [stateSugestions, setSugestions] = useState();\n\n  const handleIdDetails = async () => {\n    const recipeById = await detailsFoodById(stateIdDetails.id);\n\n    setStatelocal({\n      ...stateLocal,\n      food: recipeById,\n      id: stateIdDetails.id,\n    });\n    // console.log(recipeById);\n  };\n\n  const getSugestedFoods = async () => {\n    const foods = await showSugestedFoods();\n    console.log(foods);\n\n    setSugestions(foods);\n  };\n\n  useEffect(() => {\n    handleIdDetails();\n    getSugestedFoods();\n  }, []);\n\n  const getIngredients = () => {\n    const objectIngredients = stateLocal.food.meals[0];\n\n    const keysIngredients = Object.keys(objectIngredients)\n      .filter((key) => key.includes('strIngredient')\n        && objectIngredients[key] !== '');\n\n    const ingredients = keysIngredients\n      .map((key) => objectIngredients[key]);\n\n    return ingredients;\n  };\n\n  const number = 5;\n\n  return (\n    <div>\n      {stateLocal ? (\n        <div className=\"main-details\">\n          {console.log(stateLocal.food.meals)}\n          <div className=\"container-img\">\n            <img\n              data-testid=\"recipe-photo\"\n              className=\"img-details\"\n              src={ stateLocal.food.meals[0].strMealThumb }\n              alt={ stateLocal.food.meals[0].strMeal }\n            />\n            <span data-testid=\"recipe-title\">\n              { stateLocal.food.meals[0].strMeal }\n            </span>\n            <div>\n              <img\n                data-testid=\"share-btn\"\n                src={ shareIcon }\n                alt=\"shareIcon\"\n              />\n              <img\n                data-testid=\"favorite-btn\"\n                src={ whiteHeartIcon }\n                alt=\"whiteHeartIcon\"\n              />\n            </div>\n            <div data-testid=\"recipe-category\">\n              {stateLocal.food.meals[0].strCategory}\n            </div>\n            <div className=\"ingredients\">\n              <span>Ingredients</span>\n              <ul>\n                {getIngredients().map((ingred, i) => (\n                  <li\n                    data-testid={ `${i}-ingredient-name-and-measure` }\n                    key={ i }\n                  >\n                    {ingred}\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <div className=\"instructions\">\n              <span>Instructions</span>\n              <div data-testid=\"instructions\">\n                {stateLocal.food.meals[0].strInstructions}\n              </div>\n            </div>\n            <div className=\"video\">\n              <span>Video</span>\n              <a\n                data-testid=\"video\"\n                href={ stateLocal.food.meals[0].strYoutube }\n              >\n                <img\n                  src={ stateLocal.food.meals[0].strMealThumb }\n                  alt={ stateLocal.food.meals[0].strMeal }\n                />\n              </a>\n            </div>\n            <div>\n              { stateSugestions && stateSugestions.map((meal, index) => {\n                if (index <= number) {\n                  return (\n                    <div className=\"card\" key={ meal.strMeal } data-testid={ `${index}-recipe-card` }>\n                      <p data-testid={ `${index}-card-name` }>{meal.strMeal}</p>\n                      <button\n                        type=\"button\"\n                        className=\"button\"\n                        onClick={ () => handleIdDetails(meal.idMeal) }\n                      >\n                        <Link to={ `/comidas/${meal.idMeal}` }>\n                          <img\n                            width=\"200\"\n                            src={ meal.strMealThumb }\n                            alt={ meal.strMeal }\n                            data-testid={ `${index}-card-img` }\n                          />\n                        </Link>\n                      </button>\n                    </div>\n                  );\n                }\n                return '';\n              })}\n            </div>\n          </div>\n        </div>\n      ) : <div>Loading...</div>}\n    </div>\n  );\n};\n\nexport default DetalhesComida;\n"]},"metadata":{},"sourceType":"module"}