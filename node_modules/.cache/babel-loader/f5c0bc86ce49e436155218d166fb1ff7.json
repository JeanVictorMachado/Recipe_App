{"ast":null,"code":"var _jsxFileName = \"/home/jean/Trybe/projetos-Trybe/sd-06-project-recipes-app/src/Pages/ProcessoComida.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { detailsFoodById } from '../services/aPI';\nimport './ProcessoComida.css';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\n\nconst ReceitaProcessoComida = () => {\n  const [recipeProgress, setRecipeProgress] = useState();\n  const [attributesNames, setAttributesNames] = useState();\n  const [checkedId, setCheckedId] = useState();\n  const idFood = useParams().id;\n\n  const handleIdInProgress = async () => {\n    const recipeById = await detailsFoodById(idFood);\n    setRecipeProgress({ ...recipeProgress,\n      food: recipeById\n    });\n  };\n\n  useEffect(() => {\n    handleIdInProgress();\n  }, []);\n\n  const handleAttributesNames = () => {\n    if (recipeProgress) {\n      setAttributesNames({\n        idFood: recipeProgress.food.meals[0].idMeal,\n        photoFood: recipeProgress.food.meals[0].strMealThumb,\n        area: recipeProgress.food.meals[0].strArea,\n        nameFood: recipeProgress.food.meals[0].strMeal,\n        categoryFood: recipeProgress.food.meals[0].strCategory,\n        instructionsFood: recipeProgress.food.meals[0].strInstructions,\n        doneDate: '',\n        tags: recipeProgress.food.meals[0].strTags ? recipeProgress.food.meals[0].strTags : []\n      });\n    } else {\n      return '';\n    }\n  };\n\n  useEffect(() => {\n    handleAttributesNames();\n  }, [recipeProgress]);\n\n  const getIngredientsOrMeasure = param => {\n    const dataObject = recipeProgress.food.meals[0];\n    const dataKeys = Object.keys(dataObject).filter(key => key.includes(param) && dataObject[key] !== '' && dataObject[key] !== ' ' && dataObject[key] !== null);\n    const ingredients = dataKeys.map(key => dataObject[key]);\n    return ingredients;\n  };\n\n  const handleFavorite = () => {\n    if (localStorage.getItem('doneRecipes') === null) {\n      const doneRecipes = [];\n      localStorage.setItem('doneRecipes', JSON.stringify(doneRecipes));\n    } else if (recipeProgress) {\n      localStorage.setItem('doneRecipes', JSON.stringify([{\n        id: recipeProgress.food.meals[0].idMeal,\n        type: 'comida',\n        area: recipeProgress.food.meals[0].strArea,\n        category: recipeProgress.food.meals[0].strCategory,\n        alcoholicOrNot: '',\n        name: recipeProgress.food.meals[0].strMeal,\n        photoFood: recipeProgress.food.meals[0].strMealThumb,\n        doneDate: '',\n        tags: recipeProgress.food.meals[0].strTags ? recipeProgress.food.meals[0].strTags : []\n      }]));\n    } else {\n      return '';\n    }\n  };\n\n  useEffect(() => {\n    handleFavorite();\n  }, [recipeProgress]);\n\n  const loadCheckedIngredientsLocalStorage = () => {\n    if (localStorage.getItem('checkedIngredients') === null) {\n      const checkedIngredients = {\n        cocktails: {},\n        meals: {}\n      };\n      localStorage.setItem('checkedIngredients', JSON.stringify(checkedIngredients));\n    }\n\n    const checkedIngredients = JSON.parse(localStorage.getItem('checkedIngredients'));\n    setCheckedId(checkedIngredients.meals[idFood]);\n  };\n\n  useEffect(() => {\n    loadCheckedIngredientsLocalStorage();\n  }, []);\n\n  const scratCheckbox = target => {\n    // console.log(target.checked);\n    const checkedIngredients = JSON.parse(localStorage.getItem('checkedIngredients'));\n\n    if (target.checked === true) {\n      const ingredientsToSave = { ...checkedIngredients,\n        meals: { ...checkedIngredients.meals,\n          [idFood]: [...checkedIngredients.meals[idFood], target.id]\n        }\n      };\n      localStorage.setItem('checkedIngredients', JSON.stringify(ingredientsToSave)); // setCheckedId(ingredientsToSave.meals[idFood]);\n    } else {\n      const ingredientsToSave = { ...checkedIngredients,\n        meals: { ...checkedIngredients.meals,\n          [idFood]: [...checkedIngredients.meals[idFood].filter(id => id !== target.id)]\n        }\n      };\n      localStorage.setItem('checkedIngredients', JSON.stringify(ingredientsToSave)); // setCheckedId(ingredientsToSave.meals[idFood]);\n    }\n\n    return target.id;\n  };\n\n  const compare = target => {\n    const idIngredients = JSON.parse(localStorage.getItem('checkedIngredients')).meals[idFood];\n    const input = document.querySelector('.checkbox-input'); // console.log(input !== null ? input.checked : true);\n\n    console.log(target);\n\n    if (input !== null) {\n      return false;\n    }\n\n    return true;\n  };\n\n  useEffect(() => {\n    compare();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, !attributesNames ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body-progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    src: attributesNames.photoFood,\n    alt: attributesNames.nameFood,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, attributesNames.nameFood), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"button-share\",\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: \"shareIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: whiteHeartIcon,\n    alt: \"whiteHeartIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-cotegory\",\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, attributesNames.categoryFood), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-ingredients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, getIngredientsOrMeasure('strIngredient').map((ingred, i) => /*#__PURE__*/React.createElement(\"label\", {\n    key: i,\n    htmlFor: i,\n    className: \"input-checkbox\",\n    \"data-testid\": `${i}-ingredient-step`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"checkbox-input\",\n    name: ingred.nameFood,\n    type: \"checkbox\",\n    id: i,\n    checked: compare(),\n    onChange: ({\n      target\n    }) => compare(target),\n    onClick: ({\n      target\n    }) => scratCheckbox(target),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }), `${ingred} - ${getIngredientsOrMeasure('strMeasure')[i]}`)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-instructions\",\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, \"Instructions\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }, attributesNames.instructionsFood)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"link-button\",\n    to: \"/receitas-feitas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }, \"Finalizar Receita\")))));\n};\n\nexport default ReceitaProcessoComida;","map":{"version":3,"sources":["/home/jean/Trybe/projetos-Trybe/sd-06-project-recipes-app/src/Pages/ProcessoComida.jsx"],"names":["React","useState","useEffect","useParams","Link","detailsFoodById","ReceitaProcessoComida","recipeProgress","setRecipeProgress","attributesNames","setAttributesNames","checkedId","setCheckedId","idFood","id","handleIdInProgress","recipeById","food","handleAttributesNames","meals","idMeal","photoFood","strMealThumb","area","strArea","nameFood","strMeal","categoryFood","strCategory","instructionsFood","strInstructions","doneDate","tags","strTags","getIngredientsOrMeasure","param","dataObject","dataKeys","Object","keys","filter","key","includes","ingredients","map","handleFavorite","localStorage","getItem","doneRecipes","setItem","JSON","stringify","type","category","alcoholicOrNot","name","loadCheckedIngredientsLocalStorage","checkedIngredients","cocktails","parse","scratCheckbox","target","checked","ingredientsToSave","compare","idIngredients","input","document","querySelector","console","log","shareIcon","whiteHeartIcon","ingred","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { detailsFoodById } from '../services/aPI';\n\nimport './ProcessoComida.css';\n\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\n\nconst ReceitaProcessoComida = () => {\n  const [recipeProgress, setRecipeProgress] = useState();\n  const [attributesNames, setAttributesNames] = useState();\n  const [checkedId, setCheckedId] = useState();\n\n  const idFood = useParams().id;\n\n  const handleIdInProgress = async () => {\n    const recipeById = await detailsFoodById(idFood);\n\n    setRecipeProgress({\n      ...recipeProgress,\n      food: recipeById,\n    });\n  };\n\n  useEffect(() => {\n    handleIdInProgress();\n  }, []);\n\n  const handleAttributesNames = () => {\n    if (recipeProgress) {\n      setAttributesNames({\n        idFood: recipeProgress.food.meals[0].idMeal,\n        photoFood: recipeProgress.food.meals[0].strMealThumb,\n        area: recipeProgress.food.meals[0].strArea,\n        nameFood: recipeProgress.food.meals[0].strMeal,\n        categoryFood: recipeProgress.food.meals[0].strCategory,\n        instructionsFood: recipeProgress.food.meals[0].strInstructions,\n        doneDate: '',\n        tags: recipeProgress.food.meals[0].strTags\n          ? recipeProgress.food.meals[0].strTags\n          : [],\n      });\n    } else {\n      return '';\n    }\n  };\n\n  useEffect(() => {\n    handleAttributesNames();\n  }, [recipeProgress]);\n\n  const getIngredientsOrMeasure = (param) => {\n    const dataObject = recipeProgress.food.meals[0];\n\n    const dataKeys = Object.keys(dataObject)\n      .filter((key) => key.includes(param)\n        && dataObject[key] !== '' && dataObject[key] !== ' ' && dataObject[key] !== null);\n\n    const ingredients = dataKeys\n      .map((key) => dataObject[key]);\n\n    return ingredients;\n  };\n\n  const handleFavorite = () => {\n    if (localStorage.getItem('doneRecipes') === null) {\n      const doneRecipes = [];\n      localStorage.setItem('doneRecipes', JSON.stringify(doneRecipes));\n    } else if (recipeProgress) {\n      localStorage.setItem('doneRecipes', JSON.stringify([{\n        id: recipeProgress.food.meals[0].idMeal,\n        type: 'comida',\n        area: recipeProgress.food.meals[0].strArea,\n        category: recipeProgress.food.meals[0].strCategory,\n        alcoholicOrNot: '',\n        name: recipeProgress.food.meals[0].strMeal,\n        photoFood: recipeProgress.food.meals[0].strMealThumb,\n        doneDate: '',\n        tags: recipeProgress.food.meals[0].strTags\n          ? recipeProgress.food.meals[0].strTags\n          : [],\n      }]));\n    } else {\n      return '';\n    }\n  };\n\n  useEffect(() => {\n    handleFavorite();\n  }, [recipeProgress]);\n\n  const loadCheckedIngredientsLocalStorage = () => {\n    if (localStorage.getItem('checkedIngredients') === null) {\n      const checkedIngredients = {\n        cocktails: {},\n        meals: {},\n      };\n      localStorage.setItem('checkedIngredients', JSON.stringify(checkedIngredients));\n    }\n\n    const checkedIngredients = JSON.parse(localStorage.getItem('checkedIngredients'));\n    setCheckedId(checkedIngredients.meals[idFood]);\n  };\n\n  useEffect(() => {\n    loadCheckedIngredientsLocalStorage();\n  }, []);\n\n  const scratCheckbox = (target) => {\n    // console.log(target.checked);\n\n    const checkedIngredients = JSON.parse(localStorage.getItem('checkedIngredients'));\n\n    if (target.checked === true) {\n      const ingredientsToSave = {\n        ...checkedIngredients,\n        meals: {\n          ...checkedIngredients.meals,\n          [idFood]: [\n            ...checkedIngredients.meals[idFood],\n            target.id,\n          ],\n        },\n      };\n      localStorage.setItem('checkedIngredients', JSON.stringify(ingredientsToSave));\n      // setCheckedId(ingredientsToSave.meals[idFood]);\n    } else {\n      const ingredientsToSave = {\n        ...checkedIngredients,\n        meals: {\n          ...checkedIngredients.meals,\n          [idFood]: [\n            ...checkedIngredients.meals[idFood].filter((id) => id !== target.id),\n          ],\n        },\n      };\n      localStorage.setItem('checkedIngredients', JSON.stringify(ingredientsToSave));\n      // setCheckedId(ingredientsToSave.meals[idFood]);\n    }\n    return target.id;\n  };\n\n  const compare = (target) => {\n    const idIngredients = JSON.parse(localStorage.getItem('checkedIngredients'))\n      .meals[idFood];\n    const input = document.querySelector('.checkbox-input');\n\n    // console.log(input !== null ? input.checked : true);\n    console.log(target);\n\n    if (input !== null) {\n      return false;\n    }\n    return true;\n  };\n\n  useEffect(() => {\n    compare();\n  }, []);\n\n  return (\n\n    <div>\n      {/* {checkedId ? console.log(checkedId.meals[idFood]) : console.log('false')} */}\n      {!attributesNames\n        ? <div className=\"loading\">Loading...</div>\n        : (\n          <div className=\"body-progress\">\n            <div className=\"container-photo\">\n              <img\n                data-testid=\"recipe-photo\"\n                src={ attributesNames.photoFood }\n                alt={ attributesNames.nameFood }\n              />\n            </div>\n            <div className=\"container-title\">\n              <div\n                className=\"title\"\n                data-testid=\"recipe-title\"\n              >\n                {attributesNames.nameFood}\n              </div>\n              <div className=\"container-icons\">\n                <button\n                  type=\"button\"\n                >\n                  <img\n                    className=\"button-share\"\n                    data-testid=\"share-btn\"\n                    src={ shareIcon }\n                    alt=\"shareIcon\"\n                  />\n                </button>\n                <button\n                  type=\"button\"\n                >\n                  <img\n                    data-testid=\"favorite-btn\"\n                    src={ whiteHeartIcon }\n                    alt=\"whiteHeartIcon\"\n                  />\n                </button>\n              </div>\n            </div>\n            <div\n              className=\"container-cotegory\"\n              data-testid=\"recipe-category\"\n            >\n              {attributesNames.categoryFood}\n            </div>\n            <div className=\"container-ingredients\">\n              <span>Ingredients</span>\n              <div className=\"container-checkbox\">\n                {getIngredientsOrMeasure('strIngredient').map((ingred, i) => (\n                  <label\n                    key={ i }\n                    htmlFor={ i }\n                    className=\"input-checkbox\"\n                    data-testid={ `${i}-ingredient-step` }\n                  >\n                    <input\n                      className=\"checkbox-input\"\n                      name={ ingred.nameFood }\n                      type=\"checkbox\"\n                      id={ i }\n                      checked={ compare() }\n                      onChange={ ({ target }) => compare(target) }\n                      onClick={ (({ target }) => scratCheckbox(target)) }\n                    />\n                    {`${ingred} - ${getIngredientsOrMeasure('strMeasure')[i]}`}\n                  </label>\n                ))}\n              </div>\n            </div>\n            <div\n              className=\"container-instructions\"\n              data-testid=\"instructions\"\n            >\n              <span>Instructions</span>\n              <div className=\"text-instructions\">\n                {attributesNames.instructionsFood}\n              </div>\n            </div>\n            <div className=\"container-button\">\n              <button\n                type=\"button\"\n                data-testid=\"finish-recipe-btn\"\n              >\n                <Link\n                  className=\"link-button\"\n                  to=\"/receitas-feitas\"\n                >\n                  Finalizar Receita\n                </Link>\n              </button>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default ReceitaProcessoComida;\n"]},"metadata":{},"sourceType":"module"}