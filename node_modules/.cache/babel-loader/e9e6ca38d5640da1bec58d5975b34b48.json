{"ast":null,"code":"var _jsxFileName = \"/home/jean/Trybe/projetos-Trybe/sd-06-project-recipes-app/src/Pages/Login.jsx\";\nimport React, { useContext, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport ContextAPI from '../Context/ContextAPI';\nimport './Login.css';\n\nconst Login = () => {\n  const {\n    setEmail\n  } = useContext(ContextAPI);\n  const [username, setUsername] = useState('');\n  const [isEmailValid, setEmailValid] = useState(false);\n  const [isPasswordValid, setPasswordValid] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n\n  const handleInput = value => {\n    const regex = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n\n    if (regex.test(value.toLowerCase())) {\n      setEmailValid(true);\n      setUsername(value);\n    } else {\n      setEmailValid(false);\n    }\n  };\n\n  const handlePassword = value => {\n    const passwordLength = 6;\n\n    if (value.length > passwordLength) {\n      setPasswordValid(true);\n    } else {\n      setPasswordValid(false);\n    }\n  };\n\n  const buttonClick = () => {\n    setEmail(username);\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    localStorage.setItem('user', JSON.stringify({\n      email: username\n    }));\n    setRedirect(true);\n  };\n\n  return redirect ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"comidas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"capa1.jpg\",\n    alt: \"gbgf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"email\",\n    placeholder: \"Email\",\n    \"data-testid\": \"email-input\",\n    onChange: e => handleInput(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"senha\",\n    placeholder: \"Senha\",\n    \"data-testid\": \"password-input\",\n    onChange: e => handlePassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"login-submit-btn\",\n    disabled: !(isEmailValid && isPasswordValid),\n    onClick: () => buttonClick(),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Entrar\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/jean/Trybe/projetos-Trybe/sd-06-project-recipes-app/src/Pages/Login.jsx"],"names":["React","useContext","useState","Redirect","ContextAPI","Login","setEmail","username","setUsername","isEmailValid","setEmailValid","isPasswordValid","setPasswordValid","redirect","setRedirect","handleInput","value","regex","test","toLowerCase","handlePassword","passwordLength","length","buttonClick","localStorage","setItem","JSON","stringify","email","e","target"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport ContextAPI from '../Context/ContextAPI';\nimport './Login.css';\n\nconst Login = () => {\n  const { setEmail } = useContext(ContextAPI);\n\n  const [username, setUsername] = useState('');\n\n  const [isEmailValid, setEmailValid] = useState(false);\n  const [isPasswordValid, setPasswordValid] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n\n  const handleInput = (value) => {\n    const regex = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n    if (regex.test(value.toLowerCase())) {\n      setEmailValid(true);\n      setUsername(value);\n    } else {\n      setEmailValid(false);\n    }\n  };\n\n  const handlePassword = (value) => {\n    const passwordLength = 6;\n    if (value.length > passwordLength) {\n      setPasswordValid(true);\n    } else {\n      setPasswordValid(false);\n    }\n  };\n\n  const buttonClick = () => {\n    setEmail(username);\n\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    localStorage.setItem('user', JSON.stringify({ email: username }));\n    setRedirect(true);\n  };\n\n  return redirect ? (\n    <Redirect to=\"comidas\" />\n  ) : (\n\n    <div className=\"main-login\">\n      <img src=\"capa1.jpg\" alt=\"gbgf\" />\n      <div className=\"login\">\n        <span>Login</span>\n        <label htmlFor=\"email\">\n          <input\n            type=\"text\"\n            id=\"email\"\n            placeholder=\"Email\"\n            data-testid=\"email-input\"\n            onChange={ (e) => handleInput(e.target.value) }\n          />\n        </label>\n        <label htmlFor=\"senha\">\n          <input\n            type=\"password\"\n            id=\"senha\"\n            placeholder=\"Senha\"\n            data-testid=\"password-input\"\n            onChange={ (e) => handlePassword(e.target.value) }\n          />\n        </label>\n        <button\n          data-testid=\"login-submit-btn\"\n          disabled={ !(isEmailValid && isPasswordValid) }\n          onClick={ () => buttonClick() }\n          type=\"button\"\n        >\n          Entrar\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}