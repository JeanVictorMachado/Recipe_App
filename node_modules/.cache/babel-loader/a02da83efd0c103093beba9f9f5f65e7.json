{"ast":null,"code":"var _jsxFileName = \"/home/jean/Trybe/projetos-Trybe/sd-06-project-recipes-app/src/components/SearchBar/index.js\";\nimport React, { useContext, useState } from 'react';\nimport ContextAPI from '../../Context/ContextAPI';\nimport { searchFood, searchDrink } from '../../services/aPI';\nimport './styles.css';\n\nconst SearchBar = () => {\n  const {\n    searchComponent,\n    setApiValueSearch,\n    apiValueSearch\n  } = useContext(ContextAPI);\n  const [nome, setNome] = useState('');\n  const [radioButton, setRadioButton] = useState('');\n\n  const handleChange = target => {\n    if (target.name === 'radio-button') setRadioButton(target.value);\n    if (target.name === 'text') setNome(target.value);\n  };\n\n  const handleChangeButton = async () => {\n    if (radioButton === 'primeira-letra' && nome.length > 1) {\n      return alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n\n    if (window.location.pathname === '/bebidas') {\n      const drinks = await searchDrink(nome, radioButton); // console.log(drinks);\n\n      if (drinks.drinks === null) {\n        alert('Sinto muito, n達o encontramos nenhuma receita para esses filtros.');\n      } else {\n        return setApiValueSearch({ ...apiValueSearch,\n          drinks\n        });\n      }\n    }\n\n    const foods = await searchFood(nome, radioButton); // console.log(foods);\n\n    if (foods.meals === null) {\n      alert('Sinto muito, n達o encontramos nenhuma receita para esses filtros.');\n    } else {\n      return setApiValueSearch({ ...apiValueSearch,\n        foods\n      });\n    }\n  };\n\n  return searchComponent && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-search-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"search-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"search-input\",\n    name: \"text\",\n    type: \"text\",\n    onChange: e => handleChange(e.target),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ingrediente-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    \"data-testid\": \"ingredient-search-radio\",\n    id: \"ingrediente-button\",\n    name: \"radio-button\",\n    value: \"ingrediente\",\n    placeholder: \"Search recipe\",\n    onChange: e => handleChange(e.target),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), \"Ingrediente\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"nome-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    \"data-testid\": \"name-search-radio\",\n    id: \"nome-button\",\n    name: \"radio-button\",\n    value: \"nome\",\n    onChange: e => handleChange(e.target),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), \"Nome\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"primeira-letra\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    \"data-testid\": \"first-letter-search-radio\",\n    id: \"primeira-letra\",\n    name: \"radio-button\",\n    value: \"primeira-letra\",\n    onChange: e => handleChange(e.target),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), \"Primeira Letra\")), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"primeira-letra\",\n    type: \"button\",\n    onClick: handleChangeButton,\n    \"data-testid\": \"exec-search-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Buscar\")));\n};\n\nexport default SearchBar;","map":{"version":3,"sources":["/home/jean/Trybe/projetos-Trybe/sd-06-project-recipes-app/src/components/SearchBar/index.js"],"names":["React","useContext","useState","ContextAPI","searchFood","searchDrink","SearchBar","searchComponent","setApiValueSearch","apiValueSearch","nome","setNome","radioButton","setRadioButton","handleChange","target","name","value","handleChangeButton","length","alert","window","location","pathname","drinks","foods","meals","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,oBAAxC;AACA,OAAO,cAAP;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,iBAAnB;AAAsCC,IAAAA;AAAtC,MAAyDR,UAAU,CAACE,UAAD,CAAzE;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMY,YAAY,GAAIC,MAAD,IAAY;AAC/B,QAAIA,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoCH,cAAc,CAACE,MAAM,CAACE,KAAR,CAAd;AAEpC,QAAIF,MAAM,CAACC,IAAP,KAAgB,MAApB,EAA4BL,OAAO,CAACI,MAAM,CAACE,KAAR,CAAP;AAC7B,GAJD;;AAMA,QAAMC,kBAAkB,GAAG,YAAY;AACrC,QAAIN,WAAW,KAAK,gBAAhB,IAAoCF,IAAI,CAACS,MAAL,GAAc,CAAtD,EAAyD;AACvD,aAAOC,KAAK,CAAC,+CAAD,CAAZ;AACD;;AAED,QAAIC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,UAAjC,EAA6C;AAC3C,YAAMC,MAAM,GAAG,MAAMnB,WAAW,CAACK,IAAD,EAAOE,WAAP,CAAhC,CAD2C,CAE3C;;AACA,UAAIY,MAAM,CAACA,MAAP,KAAkB,IAAtB,EAA4B;AAC1BJ,QAAAA,KAAK,CAAC,kEAAD,CAAL;AACD,OAFD,MAEO;AACL,eAAOZ,iBAAiB,CAAC,EACvB,GAAGC,cADoB;AAEvBe,UAAAA;AAFuB,SAAD,CAAxB;AAID;AACF;;AACD,UAAMC,KAAK,GAAG,MAAMrB,UAAU,CAACM,IAAD,EAAOE,WAAP,CAA9B,CAjBqC,CAkBrC;;AACA,QAAIa,KAAK,CAACC,KAAN,KAAgB,IAApB,EAA0B;AACxBN,MAAAA,KAAK,CAAC,kEAAD,CAAL;AACD,KAFD,MAEO;AACL,aAAOZ,iBAAiB,CAAC,EACvB,GAAGC,cADoB;AAEvBgB,QAAAA;AAFuB,OAAD,CAAxB;AAID;AACF,GA3BD;;AA6BA,SAAOlB,eAAe,iBACpB;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,mBAAY,cADd;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,QAAQ,EACLoB,CAAD,IAAOb,YAAY,CAACa,CAAC,CAACZ,MAAH,CALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,mBAAY,yBAFd;AAGE,IAAA,EAAE,EAAC,oBAHL;AAIE,IAAA,IAAI,EAAC,cAJP;AAKE,IAAA,KAAK,EAAC,aALR;AAME,IAAA,WAAW,EAAC,eANd;AAOE,IAAA,QAAQ,EAAIY,CAAD,IAAOb,YAAY,CAACa,CAAC,CAACZ,MAAH,CAPhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,gBADF,eAaE;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,mBAAY,mBAFd;AAGE,IAAA,EAAE,EAAC,aAHL;AAIE,IAAA,IAAI,EAAC,cAJP;AAKE,IAAA,KAAK,EAAC,MALR;AAME,IAAA,QAAQ,EAAIY,CAAD,IAAOb,YAAY,CAACa,CAAC,CAACZ,MAAH,CANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,SAbF,eAwBE;AAAO,IAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,mBAAY,2BAFd;AAGE,IAAA,EAAE,EAAC,gBAHL;AAIE,IAAA,IAAI,EAAC,cAJP;AAKE,IAAA,KAAK,EAAC,gBALR;AAME,IAAA,QAAQ,EAAIY,CAAD,IAAOb,YAAY,CAACa,CAAC,CAACZ,MAAH,CANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,mBAxBF,CATF,eA6CE;AACE,IAAA,EAAE,EAAC,gBADL;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAGG,kBAHZ;AAIE,mBAAY,iBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7CF,CADF,CADF;AA0DD,CAlGD;;AAoGA,eAAeZ,SAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport ContextAPI from '../../Context/ContextAPI';\n\nimport { searchFood, searchDrink } from '../../services/aPI';\nimport './styles.css';\n\nconst SearchBar = () => {\n  const { searchComponent, setApiValueSearch, apiValueSearch } = useContext(ContextAPI);\n  const [nome, setNome] = useState('');\n  const [radioButton, setRadioButton] = useState('');\n\n  const handleChange = (target) => {\n    if (target.name === 'radio-button') setRadioButton(target.value);\n\n    if (target.name === 'text') setNome(target.value);\n  };\n\n  const handleChangeButton = async () => {\n    if (radioButton === 'primeira-letra' && nome.length > 1) {\n      return alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n\n    if (window.location.pathname === '/bebidas') {\n      const drinks = await searchDrink(nome, radioButton);\n      // console.log(drinks);\n      if (drinks.drinks === null) {\n        alert('Sinto muito, n達o encontramos nenhuma receita para esses filtros.');\n      } else {\n        return setApiValueSearch({\n          ...apiValueSearch,\n          drinks,\n        });\n      }\n    }\n    const foods = await searchFood(nome, radioButton);\n    // console.log(foods);\n    if (foods.meals === null) {\n      alert('Sinto muito, n達o encontramos nenhuma receita para esses filtros.');\n    } else {\n      return setApiValueSearch({\n        ...apiValueSearch,\n        foods,\n      });\n    }\n  };\n\n  return searchComponent && (\n    <div className=\"main-search-bar\">\n      <div id=\"search-bar\">\n        <input\n          data-testid=\"search-input\"\n          name=\"text\"\n          type=\"text\"\n          onChange={\n            (e) => handleChange(e.target)\n          }\n        />\n        <div className=\"input-radio\">\n          <label htmlFor=\"ingrediente-button\">\n            <input\n              type=\"radio\"\n              data-testid=\"ingredient-search-radio\"\n              id=\"ingrediente-button\"\n              name=\"radio-button\"\n              value=\"ingrediente\"\n              placeholder=\"Search recipe\"\n              onChange={ (e) => handleChange(e.target) }\n            />\n            Ingrediente\n          </label>\n          <label htmlFor=\"nome-button\">\n            <input\n              type=\"radio\"\n              data-testid=\"name-search-radio\"\n              id=\"nome-button\"\n              name=\"radio-button\"\n              value=\"nome\"\n              onChange={ (e) => handleChange(e.target) }\n            />\n            Nome\n          </label>\n          <label htmlFor=\"primeira-letra\">\n            <input\n              type=\"radio\"\n              data-testid=\"first-letter-search-radio\"\n              id=\"primeira-letra\"\n              name=\"radio-button\"\n              value=\"primeira-letra\"\n              onChange={ (e) => handleChange(e.target) }\n            />\n            Primeira Letra\n          </label>\n        </div>\n        <button\n          id=\"primeira-letra\"\n          type=\"button\"\n          onClick={ handleChangeButton }\n          data-testid=\"exec-search-btn\"\n        >\n          Buscar\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}