{"ast":null,"code":"var _jsxFileName = \"/home/jean/projetos-pessoais-portifolio/Recipe_App/src/components/FavoriteBtn/FavoriteFoodBtn.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport whiteHeartIcon from \"../../images/whiteHeartIcon.svg\";\nimport blackHeartIcon from \"../../images/blackHeartIcon.svg\";\nimport ContextAPI from '../../Context/ContextAPI';\n\nconst FavoriteFoodButton = () => {\n  const {\n    detailsInfo\n  } = useContext(ContextAPI);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const path = window.location.href;\n  const isFoodPage = path.includes('comidas');\n  const paramID = useParams().id;\n\n  const loadFavoriteRecipesFromLocalStorage = () => {\n    if (localStorage.getItem('favoriteRecipes') === null) {\n      const favoriteRecipes = [];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n    }\n\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const isRecipeFavorite = favoriteRecipes[0] ? favoriteRecipes.find(recipe => recipe.id === paramID) : undefined;\n    if (isRecipeFavorite) setIsFavorite(true);else setIsFavorite(false);\n  };\n\n  useEffect(() => {\n    loadFavoriteRecipesFromLocalStorage();\n  }, []);\n\n  const getFoodObject = currentFood => {\n    const foodData = {\n      id: currentFood.idMeal,\n      type: 'comida',\n      area: currentFood.strArea,\n      category: currentFood.strCategory,\n      alcoholicOrNot: '',\n      name: currentFood.strMeal,\n      image: currentFood.strMealThumb\n    };\n    return foodData;\n  };\n\n  const getDrinkObject = currentDrink => {\n    const drinkData = {\n      id: currentDrink.idDrink,\n      type: 'bebida',\n      area: '',\n      category: currentDrink.strCategory,\n      alcoholicOrNot: currentDrink.strAlcoholic,\n      name: currentDrink.strDrink,\n      image: currentDrink.strDrinkThumb\n    };\n    return drinkData;\n  };\n\n  const checkIfIsAlreadyFavorite = (favoriteRecipes, currentRecipe) => {\n    const isAlreadyAFavorite = favoriteRecipes.find(recipe => isFoodPage ? recipe.id === currentRecipe.idMeal : recipe.id === currentRecipe.idDrink);\n    return isAlreadyAFavorite;\n  };\n\n  const handleFavorite = () => {\n    const currentRecipe = isFoodPage ? detailsInfo.foods : detailsInfo.drinks;\n    const recipeData = isFoodPage ? getFoodObject(currentRecipe) : getDrinkObject(currentRecipe);\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const emptyFavorites = 0;\n    const isFavoriteRecipesNotEmpty = favoriteRecipes.length > emptyFavorites;\n    const isAlreadyAFavorite = isFavoriteRecipesNotEmpty ? checkIfIsAlreadyFavorite(favoriteRecipes, currentRecipe) : undefined;\n\n    if (isAlreadyAFavorite) {\n      setIsFavorite(false);\n      localStorage.setItem('favoriteRecipes', JSON.stringify([...favoriteRecipes.filter(recipe => isFoodPage ? recipe.id !== currentRecipe.idMeal : recipe.id !== currentRecipe.idDrink)]));\n    } else {\n      setIsFavorite(true);\n      localStorage.setItem('favoriteRecipes', JSON.stringify([...favoriteRecipes, recipeData]));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleFavorite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: !isFavorite ? whiteHeartIcon : blackHeartIcon,\n    alt: !isFavorite ? 'whiteHeartIcon' : 'blackHeartIcon',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FavoriteFoodButton;","map":{"version":3,"sources":["/home/jean/projetos-pessoais-portifolio/Recipe_App/src/components/FavoriteBtn/FavoriteFoodBtn.js"],"names":["React","useContext","useEffect","useState","useParams","ContextAPI","FavoriteFoodButton","detailsInfo","isFavorite","setIsFavorite","path","window","location","href","isFoodPage","includes","paramID","id","loadFavoriteRecipesFromLocalStorage","localStorage","getItem","favoriteRecipes","setItem","JSON","stringify","parse","isRecipeFavorite","find","recipe","undefined","getFoodObject","currentFood","foodData","idMeal","type","area","strArea","category","strCategory","alcoholicOrNot","name","strMeal","image","strMealThumb","getDrinkObject","currentDrink","drinkData","idDrink","strAlcoholic","strDrink","strDrinkThumb","checkIfIsAlreadyFavorite","currentRecipe","isAlreadyAFavorite","handleFavorite","foods","drinks","recipeData","emptyFavorites","isFavoriteRecipesNotEmpty","length","filter","whiteHeartIcon","blackHeartIcon"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport ContextAPI from '../../Context/ContextAPI';\n\nconst FavoriteFoodButton = () => {\n  const { detailsInfo } = useContext(ContextAPI);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const path = window.location.href;\n  const isFoodPage = path.includes('comidas');\n  const paramID = useParams().id;\n\n  const loadFavoriteRecipesFromLocalStorage = () => {\n    if (localStorage.getItem('favoriteRecipes') === null) {\n      const favoriteRecipes = [];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n    }\n\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const isRecipeFavorite = favoriteRecipes[0] ? favoriteRecipes\n      .find((recipe) => recipe.id === paramID) : undefined;\n\n    if (isRecipeFavorite) setIsFavorite(true);\n    else setIsFavorite(false);\n  };\n\n  useEffect(() => {\n    loadFavoriteRecipesFromLocalStorage();\n  }, []);\n\n  const getFoodObject = (currentFood) => {\n    const foodData = {\n      id: currentFood.idMeal,\n      type: 'comida',\n      area: currentFood.strArea,\n      category: currentFood.strCategory,\n      alcoholicOrNot: '',\n      name: currentFood.strMeal,\n      image: currentFood.strMealThumb,\n    };\n\n    return foodData;\n  };\n\n  const getDrinkObject = (currentDrink) => {\n    const drinkData = {\n      id: currentDrink.idDrink,\n      type: 'bebida',\n      area: '',\n      category: currentDrink.strCategory,\n      alcoholicOrNot: currentDrink.strAlcoholic,\n      name: currentDrink.strDrink,\n      image: currentDrink.strDrinkThumb,\n    };\n\n    return drinkData;\n  };\n\n  const checkIfIsAlreadyFavorite = (favoriteRecipes, currentRecipe) => {\n    const isAlreadyAFavorite = favoriteRecipes\n      .find((recipe) => (isFoodPage\n        ? (recipe.id === currentRecipe.idMeal) : recipe.id === currentRecipe.idDrink));\n\n    return isAlreadyAFavorite;\n  };\n\n  const handleFavorite = () => {\n    const currentRecipe = isFoodPage\n      ? detailsInfo.foods : detailsInfo.drinks;\n    const recipeData = isFoodPage\n      ? getFoodObject(currentRecipe) : getDrinkObject(currentRecipe);\n\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const emptyFavorites = 0;\n    const isFavoriteRecipesNotEmpty = favoriteRecipes.length > emptyFavorites;\n    const isAlreadyAFavorite = isFavoriteRecipesNotEmpty\n      ? checkIfIsAlreadyFavorite(favoriteRecipes, currentRecipe) : undefined;\n\n    if (isAlreadyAFavorite) {\n      setIsFavorite(false);\n      localStorage.setItem('favoriteRecipes', JSON.stringify([...favoriteRecipes\n        .filter((recipe) => (isFoodPage\n          ? (recipe.id !== currentRecipe.idMeal)\n          : (recipe.id !== currentRecipe.idDrink)))]));\n    } else {\n      setIsFavorite(true);\n      localStorage.setItem('favoriteRecipes', JSON.stringify([\n        ...favoriteRecipes, recipeData]));\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onClick={ handleFavorite }\n    >\n      <img\n        data-testid=\"favorite-btn\"\n        src={ !isFavorite ? whiteHeartIcon : blackHeartIcon }\n        alt={ !isFavorite ? 'whiteHeartIcon' : 'blackHeartIcon' }\n      />\n    </button>);\n};\n\nexport default FavoriteFoodButton;\n"]},"metadata":{},"sourceType":"module"}