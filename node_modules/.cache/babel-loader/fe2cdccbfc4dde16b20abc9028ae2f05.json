{"ast":null,"code":"var _jsxFileName = \"/home/jean/Trybe/projetos-Trybe/sd-06-project-recipes-app/src/Pages/ProcessoComida.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { detailsFoodById } from '../services/aPI';\nimport './ProcessoComida.css';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\n\nconst ReceitaProcessoComida = () => {\n  const idFood = useParams().id;\n  const recepesInProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  const {\n    meals\n  } = recepesInProgress;\n\n  const handleIdInProgress = async () => {\n    const recipeById = await detailsFoodById(idFood);\n    setRecipeProgress({ ...recipeProgress,\n      food: recipeById\n    });\n  };\n\n  useEffect(() => {\n    handleIdInProgress();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, console.log(meals[idFood]), !attributesNames ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body-progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    src: attributesNames.photoFood,\n    alt: attributesNames.nameFood,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, attributesNames.nameFood), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"button-share\",\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: \"shareIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: whiteHeartIcon,\n    alt: \"whiteHeartIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-cotegory\",\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, attributesNames.categoryFood), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-ingredients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, getIngredientsOrMeasure('strIngredient').map((ingred, i) => /*#__PURE__*/React.createElement(\"label\", {\n    key: i,\n    htmlFor: i,\n    className: \"input-checkbox\",\n    \"data-testid\": `${i}-ingredient-step`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    value: \"on\",\n    id: i,\n    onClick: scratCheckbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }), `${ingred} - ${getIngredientsOrMeasure('strMeasure')[i]}`)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-instructions\",\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Instructions\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, attributesNames.instructionsFood)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"link-button\",\n    to: \"/receitas-feitas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, \"Finalizar Receita\")))));\n};\n\nexport default ReceitaProcessoComida;","map":{"version":3,"sources":["/home/jean/Trybe/projetos-Trybe/sd-06-project-recipes-app/src/Pages/ProcessoComida.jsx"],"names":["React","useState","useEffect","useParams","Link","detailsFoodById","ReceitaProcessoComida","idFood","id","recepesInProgress","JSON","parse","localStorage","getItem","meals","handleIdInProgress","recipeById","setRecipeProgress","recipeProgress","food","console","log","attributesNames","photoFood","nameFood","shareIcon","whiteHeartIcon","categoryFood","getIngredientsOrMeasure","map","ingred","i","scratCheckbox","instructionsFood"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { detailsFoodById } from '../services/aPI';\n\nimport './ProcessoComida.css';\n\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\n\nconst ReceitaProcessoComida = () => {\n  const idFood = useParams().id;\n  const recepesInProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  const { meals } = recepesInProgress;\n\n  const handleIdInProgress = async () => {\n    const recipeById = await detailsFoodById(idFood);\n\n    setRecipeProgress({\n      ...recipeProgress,\n      food: recipeById,\n    });\n  };\n\n  useEffect(() => {\n    handleIdInProgress();\n  }, []);\n\n  return (\n\n    <div>\n      {console.log(meals[idFood])}\n      {!attributesNames\n        ? <div className=\"loading\">Loading...</div>\n        : (\n          <div className=\"body-progress\">\n            <div className=\"container-photo\">\n              <img\n                data-testid=\"recipe-photo\"\n                src={ attributesNames.photoFood }\n                alt={ attributesNames.nameFood }\n              />\n            </div>\n            <div className=\"container-title\">\n              <div\n                className=\"title\"\n                data-testid=\"recipe-title\"\n              >\n                {attributesNames.nameFood}\n              </div>\n              <div className=\"container-icons\">\n                <button\n                  type=\"button\"\n                >\n                  <img\n                    className=\"button-share\"\n                    data-testid=\"share-btn\"\n                    src={ shareIcon }\n                    alt=\"shareIcon\"\n                  />\n                </button>\n                <button\n                  type=\"button\"\n                >\n                  <img\n                    data-testid=\"favorite-btn\"\n                    src={ whiteHeartIcon }\n                    alt=\"whiteHeartIcon\"\n                  />\n                </button>\n              </div>\n            </div>\n            <div\n              className=\"container-cotegory\"\n              data-testid=\"recipe-category\"\n            >\n              {attributesNames.categoryFood}\n            </div>\n            <div className=\"container-ingredients\">\n              <span>Ingredients</span>\n              <div className=\"container-checkbox\">\n                {getIngredientsOrMeasure('strIngredient').map((ingred, i) => (\n                  <label\n                    key={ i }\n                    htmlFor={ i }\n                    className=\"input-checkbox\"\n                    data-testid={ `${i}-ingredient-step` }\n                  >\n                    <input\n                      type=\"checkbox\"\n                      value=\"on\"\n                      id={ i }\n                      onClick={ scratCheckbox }\n                    />\n                    {`${ingred} - ${getIngredientsOrMeasure('strMeasure')[i]}`}\n                  </label>\n                ))}\n              </div>\n            </div>\n            <div\n              className=\"container-instructions\"\n              data-testid=\"instructions\"\n            >\n              <span>Instructions</span>\n              <div className=\"text-instructions\">\n                {attributesNames.instructionsFood}\n              </div>\n            </div>\n            <div className=\"container-button\">\n              <button\n                type=\"button\"\n                data-testid=\"finish-recipe-btn\"\n              >\n                <Link\n                  className=\"link-button\"\n                  to=\"/receitas-feitas\"\n                >\n                  Finalizar Receita\n                </Link>\n              </button>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default ReceitaProcessoComida;\n"]},"metadata":{},"sourceType":"module"}