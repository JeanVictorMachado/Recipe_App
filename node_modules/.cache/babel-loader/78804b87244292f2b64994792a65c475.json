{"ast":null,"code":"var _jsxFileName = \"/home/jean/Trybe/projetos-Trybe/sd-06-project-recipes-app/src/Pages/ProcessoComida.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { detailsFoodById } from '../services/aPI';\nimport './ProcessoComida.css';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\n\nconst ReceitaProcessoComida = () => {\n  const [recipeProgress, setRecipeProgress] = useState();\n  const [attributesNames, setAttributesNames] = useState();\n  const [scratchIngredients, setScratchIngredients] = useState({\n    checkbox: false\n  });\n  const idFood = useParams().id;\n\n  const handleIdInProgress = async () => {\n    const recipeById = await detailsFoodById(idFood);\n    setRecipeProgress({ ...recipeProgress,\n      food: recipeById\n    });\n  };\n\n  useEffect(() => {\n    handleIdInProgress();\n  }, []);\n\n  const handleAttributesNames = () => {\n    if (recipeProgress) {\n      setAttributesNames({\n        idFood: recipeProgress.food.meals[0].idMeal,\n        photoFood: recipeProgress.food.meals[0].strMealThumb,\n        area: recipeProgress.food.meals[0].strArea,\n        nameFood: recipeProgress.food.meals[0].strMeal,\n        categoryFood: recipeProgress.food.meals[0].strCategory,\n        instructionsFood: recipeProgress.food.meals[0].strInstructions,\n        doneDate: '',\n        tags: recipeProgress.food.meals[0].strTags ? recipeProgress.food.meals[0].strTags : []\n      });\n    } else {\n      return '';\n    }\n  };\n\n  useEffect(() => {\n    handleAttributesNames();\n  }, [recipeProgress]);\n\n  const getIngredientsOrMeasure = param => {\n    const dataObject = recipeProgress.food.meals[0];\n    const dataKeys = Object.keys(dataObject).filter(key => key.includes(param) && dataObject[key] !== '' && dataObject[key] !== ' ' && dataObject[key] !== null);\n    const ingredients = dataKeys.map(key => dataObject[key]);\n    return ingredients;\n  };\n\n  const handleFavorite = () => {\n    if (localStorage.getItem('doneRecipes') === null) {\n      const doneRecipes = [];\n      localStorage.setItem('doneRecipes', JSON.stringify(doneRecipes));\n    } else if (recipeProgress) {\n      const recipeData = {\n        id: recipeProgress.food.meals[0].idMeal,\n        type: 'comida',\n        area: recipeProgress.food.meals[0].strArea,\n        category: recipeProgress.food.meals[0].strCategory,\n        alcoholicOrNot: '',\n        name: recipeProgress.food.meals[0].strMeal,\n        photoFood: recipeProgress.food.meals[0].strMealThumb,\n        doneDate: '',\n        tags: recipeProgress.food.meals[0].strTags ? recipeProgress.food.meals[0].strTags : []\n      };\n      localStorage.setItem('doneRecipes', JSON.stringify({\n        recipeData\n      }));\n    } else {\n      return '';\n    }\n  };\n\n  useEffect(() => {\n    handleFavorite();\n  }, [recipeProgress]);\n\n  const scratCheckbox = () => {\n    alert('falta implementar receitas risadas');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, !attributesNames ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body-progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    src: attributesNames.photoFood,\n    alt: attributesNames.nameFood,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, attributesNames.nameFood), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"button-share\",\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: \"shareIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: whiteHeartIcon,\n    alt: \"whiteHeartIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-cotegory\",\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, attributesNames.categoryFood), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-ingredients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, \"Ingredients\"), getIngredientsOrMeasure('strIngredient').map((ingred, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    className: \"container-checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: i,\n    className: \"input-checkbox\",\n    \"data-testid\": `${i}-ingredient-step`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    value: \"on\",\n    id: i,\n    onClick: scratCheckbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }), `${ingred} - ${getIngredientsOrMeasure('strMeasure')[i]}`)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-instructions\",\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, \"Instructions\"), attributesNames.instructionsFood), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, \"Finalizar Receita\"))));\n};\n\nexport default ReceitaProcessoComida;","map":{"version":3,"sources":["/home/jean/Trybe/projetos-Trybe/sd-06-project-recipes-app/src/Pages/ProcessoComida.jsx"],"names":["React","useState","useEffect","useParams","detailsFoodById","ReceitaProcessoComida","recipeProgress","setRecipeProgress","attributesNames","setAttributesNames","scratchIngredients","setScratchIngredients","checkbox","idFood","id","handleIdInProgress","recipeById","food","handleAttributesNames","meals","idMeal","photoFood","strMealThumb","area","strArea","nameFood","strMeal","categoryFood","strCategory","instructionsFood","strInstructions","doneDate","tags","strTags","getIngredientsOrMeasure","param","dataObject","dataKeys","Object","keys","filter","key","includes","ingredients","map","handleFavorite","localStorage","getItem","doneRecipes","setItem","JSON","stringify","recipeData","type","category","alcoholicOrNot","name","scratCheckbox","alert","shareIcon","whiteHeartIcon","ingred","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { detailsFoodById } from '../services/aPI';\n\nimport './ProcessoComida.css';\n\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\n\nconst ReceitaProcessoComida = () => {\n  const [recipeProgress, setRecipeProgress] = useState();\n  const [attributesNames, setAttributesNames] = useState();\n  const [scratchIngredients, setScratchIngredients] = useState({\n    checkbox: false,\n  });\n\n  const idFood = useParams().id;\n\n  const handleIdInProgress = async () => {\n    const recipeById = await detailsFoodById(idFood);\n\n    setRecipeProgress({\n      ...recipeProgress,\n      food: recipeById,\n    });\n  };\n\n  useEffect(() => {\n    handleIdInProgress();\n  }, []);\n\n  const handleAttributesNames = () => {\n    if (recipeProgress) {\n      setAttributesNames({\n        idFood: recipeProgress.food.meals[0].idMeal,\n        photoFood: recipeProgress.food.meals[0].strMealThumb,\n        area: recipeProgress.food.meals[0].strArea,\n        nameFood: recipeProgress.food.meals[0].strMeal,\n        categoryFood: recipeProgress.food.meals[0].strCategory,\n        instructionsFood: recipeProgress.food.meals[0].strInstructions,\n        doneDate: '',\n        tags: recipeProgress.food.meals[0].strTags\n          ? recipeProgress.food.meals[0].strTags\n          : [],\n      });\n    } else {\n      return '';\n    }\n  };\n\n  useEffect(() => {\n    handleAttributesNames();\n  }, [recipeProgress]);\n\n  const getIngredientsOrMeasure = (param) => {\n    const dataObject = recipeProgress.food.meals[0];\n\n    const dataKeys = Object.keys(dataObject)\n      .filter((key) => key.includes(param)\n        && dataObject[key] !== '' && dataObject[key] !== ' ' && dataObject[key] !== null);\n\n    const ingredients = dataKeys\n      .map((key) => dataObject[key]);\n\n    return ingredients;\n  };\n\n  const handleFavorite = () => {\n    if (localStorage.getItem('doneRecipes') === null) {\n      const doneRecipes = [];\n      localStorage.setItem('doneRecipes', JSON.stringify(doneRecipes));\n    } else if (recipeProgress) {\n      const recipeData = {\n        id: recipeProgress.food.meals[0].idMeal,\n        type: 'comida',\n        area: recipeProgress.food.meals[0].strArea,\n        category: recipeProgress.food.meals[0].strCategory,\n        alcoholicOrNot: '',\n        name: recipeProgress.food.meals[0].strMeal,\n        photoFood: recipeProgress.food.meals[0].strMealThumb,\n        doneDate: '',\n        tags: recipeProgress.food.meals[0].strTags\n          ? recipeProgress.food.meals[0].strTags\n          : [],\n      };\n      localStorage.setItem('doneRecipes', JSON.stringify({ recipeData }));\n    } else {\n      return '';\n    }\n  };\n\n  useEffect(() => {\n    handleFavorite();\n  }, [recipeProgress]);\n\n  const scratCheckbox = () => {\n    alert('falta implementar receitas risadas');\n  };\n\n  return (\n    <div>\n      {!attributesNames\n        ? <div className=\"loading\">Loading...</div>\n        : (\n          <div className=\"body-progress\">\n            <div className=\"container-photo\">\n              <img\n                data-testid=\"recipe-photo\"\n                src={ attributesNames.photoFood }\n                alt={ attributesNames.nameFood }\n              />\n            </div>\n            <div className=\"container-title\">\n              <div\n                className=\"title\"\n                data-testid=\"recipe-title\"\n              >\n                {attributesNames.nameFood}\n              </div>\n              <div className=\"container-icons\">\n                <button\n                  type=\"button\"\n                >\n                  <img\n                    className=\"button-share\"\n                    data-testid=\"share-btn\"\n                    src={ shareIcon }\n                    alt=\"shareIcon\"\n                  />\n                </button>\n                <button\n                  type=\"button\"\n                >\n                  <img\n                    data-testid=\"favorite-btn\"\n                    src={ whiteHeartIcon }\n                    alt=\"whiteHeartIcon\"\n                  />\n                </button>\n              </div>\n            </div>\n            <div\n              className=\"container-cotegory\"\n              data-testid=\"recipe-category\"\n            >\n              {attributesNames.categoryFood}\n            </div>\n            <div className=\"container-ingredients\">\n              <span>Ingredients</span>\n              {getIngredientsOrMeasure('strIngredient').map((ingred, i) => (\n                <div key={ i } className=\"container-checkbox\">\n                  <label\n                    htmlFor={ i }\n                    className=\"input-checkbox\"\n                    data-testid={ `${i}-ingredient-step` }\n                  >\n                    <input\n                      type=\"checkbox\"\n                      value=\"on\"\n                      id={ i }\n                      onClick={ scratCheckbox }\n                    />\n                    {`${ingred} - ${getIngredientsOrMeasure('strMeasure')[i]}`}\n                  </label>\n                </div>\n              ))}\n            </div>\n            <div\n              className=\"container-instructions\"\n              data-testid=\"instructions\"\n            >\n              <span>Instructions</span>\n              {attributesNames.instructionsFood}\n            </div>\n            <div className=\"container-button\">\n              <button\n                type=\"button\"\n                data-testid=\"finish-recipe-btn\"\n              >\n                Finalizar Receita\n              </button>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default ReceitaProcessoComida;\n"]},"metadata":{},"sourceType":"module"}